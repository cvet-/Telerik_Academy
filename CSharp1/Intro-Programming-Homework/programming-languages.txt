* JavaScript is a dynamic computer programming language. The programming language of the Web. It is most commonly used as part of web browsers, whose implementations allow the client-side scripts to interact with the user.
The major differences between JS and C# are that JS can be run on any platform, directly in any browser and is interpreted as opposed to compiled, and that JS is not object-oriented and class-based.

* C++ is a general-purpose programming language. It has imperative, object-oriented and generic programming features, while also providing the facilities for low-level memory manipulation.
DIFFERENCES BETWEEN C# AND C++:
They both have objects but in C# the objects are managed objects and are garbage collected, in C++ you have to manage memory yourself.
C++ supports multiple inheritance, C# does not (but it supports implementing multiple interfaces).
C++ has templates, C# has generics. The syntax looks similar, but under the covers they are very different.
C++ is generally compiled to native code, C# is generally compiled to intermediate language bytecode.

* PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language.
The major differences between PHP and C# is that PHP is a dynamic and interpreted while C# is static and needs to be compiled.

* Python is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.
Python has a larger user base on mac and unix-based platforms. C# projects are often windows-based applications

* Java is a functional computer programming language that is concurrent, class-based, object-oriented,[11] and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers "write once, run anywhere" 

DIFFERENCES BETWEEN C# AND JAVA:
Java is "platform independent". Well nowadays you could say there is the Mono project so C# could be considered too but I believe it is a bit exaggerating. Why? Well, when a new release of Java is done it is simultaneously available on all platforms it supports, on the other hand how many features of C# 3.0 are still missing in the Mono implementation? Or is it really CLR vs. JRE that we should compare here?
Java doesn't support events and delegates. As far as I know.
In Java all methods are virtual
Development tools: I believe there isn't such a tool yet as Visual Studio. Especially if you've worked with team editions you'll know what I mean.

